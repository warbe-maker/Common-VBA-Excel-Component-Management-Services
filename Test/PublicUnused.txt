       The following 10 Public declared items are  u n u s e d ! *)      
 ------------------------------------------------------------------------
  Kind of Component.Item              Public item (component.item)       
  ----------------------------------- -----------------------------------
  Standard-Module.Function            mCompMan.RunTest
  Standard-Module.Sub-Procedure       mExport.All
  Standard-Module.Sub-Procedure       mSyncLog.AddEntry
  Standard-Module.Sub-Procedure       mSyncNames.MaxLenNameId
  Standard-Module.Function            mSyncNames.SyncId
  Standard-Module.Function            mSyncRefs.MaxLenRefId
  WorkSheet.Property-Get              wsConfig.ButtonCaption
  WorkSheet.Property-Get              wsConfig.FolderCommonComponentsName
  WorkSheet.Property-Get              wsService.ServicedItemsMaxLenName
  WorkSheet.Property-Get              wsService.ServicedItemsMaxLenType
  
 *) Public items are not analysed in their own component.  
    I.e. an unused Public item may still be used within its own Component.
    In case the Public item should rather be turned into Private!
  
 =============================================================================================================================================================================
                                               The following 267 Public declared items had been found in at least one code line:                                              
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Public Item                                          Used in VBComponent.Procedure                        Line                           Code line                          
                                                       (by example)                                          No                                                               
  ---------------------------------------------------- --------------------------------------------------- ------ ------------------------------------------------------------
  clsComp.DueModificationWarning ..................... mExport.ChangedComponents ........................:    157 .DueModificationWarning = True
  clsComp.Export ..................................... wsConfig.FolderExportConfigure ...................:    420 sNew = VBA.InputBox(Prompt:="Enter the name for the folder to which changed components are exported " & "by CompMan's 'Export Changed Components' service (for Workbooks which a " & "correspondingly configured and reside within the configured serrviced 'Development and Test' folder." & vbLf & vbLf & "Attention! When the name of the Export folder is changed, all old named folders are renamed correspondingly.", Title:="Export folder name", Default:=sOld)
  clsComps.All ....................................... clsServices.Initiate .............................:    738 Set dctAllComps = Comps.All
  clsComps.CollectAll ................................ mSync.CollectAll .................................:    298 Private Sub CollectAll(ByVal c_wbk_source As Workbook, ByVal c_wbk_target As Workbook, Optional ByRef c_terminated As Boolean = False)
  clsComps.CommonUsed ................................ mCommComps.OutdatedUpdateCollect .................:    585 Set dct = Comps.CommonUsed
  clsComps.MaxLenServicedItem ........................ clsServices.Initiate .............................:    747 .MaxItemLengths Comps.MaxLenServicedType, Comps.MaxLenServicedItem
  clsComps.MaxLenServicedType ........................ clsServices.Initiate .............................:    747 .MaxItemLengths Comps.MaxLenServicedType, Comps.MaxLenServicedItem
  clsRaw.CompName .................................... mExport.All ......................................:     58 .CompName = vbc.Name
  clsRaw.ExpFileTemp ................................. clsComp.ExpFileTempAndRawExpFileDiffers ..........:    334 ExpFileTempAndRawExpFileDiffers = mCompMan.Services.FilesDiffer(fd_exp_file_1:=Raw.SavedExpFile, fd_exp_file_2:=Me.ExpFileTemp)
  clsRaw.SavedExpFile ................................ clsComp.ExpFilesDiffer ...........................:    325 ExpFilesDiffer = mCompMan.Services.FilesDiffer(fd_exp_file_1:=Raw.SavedExpFile, fd_exp_file_2:=Me.ExpFile)
  clsRaw.SavedExpFileFullName ........................ mCommComps.OutdatedUpdateChoiceDsplyDiffs ........:    463 Services.ExpFilesDiffDisplay .ExpFileFullName, .Raw.SavedExpFileFullName, "Currently used (" & .ExpFileFullName & ")", "Up-to-date (" & .Raw.SavedExpFileFullName & ")"
  clsServices.Denied ................................. mCompMan.ExportChangedComponents .................:    295 If Services.Denied(mCompManClient.SRVC_EXPORT_CHANGED) Then GoTo xt
  clsServices.DialogLeft ............................. mSyncNames.SyncKind ..............................:   1706 mMsg.Dsply dsply_title:=TITLE_SYNC_NAMES, dsply_msg:=Msg, dsply_buttons:=cllButtons, dsply_modeless:=True, dsply_buttons_app_run:=AppRunArgs, dsply_width_min:=45, dsply_pos:=Services.DialogTop & ";" & Services.DialogLeft
  clsServices.DialogTop .............................. mSyncNames.SyncKind ..............................:   1706 mMsg.Dsply dsply_title:=TITLE_SYNC_NAMES, dsply_msg:=Msg, dsply_buttons:=cllButtons, dsply_modeless:=True, dsply_buttons_app_run:=AppRunArgs, dsply_width_min:=45, dsply_pos:=Services.DialogTop & ";" & Services.DialogLeft
  clsServices.DsplyProgress .......................... mExport.ChangedComponents ........................:    188 .DsplyProgress "exported"
  clsServices.DsplyStatus ............................ mSyncNames.AppRunChanged .........................:    242 Services.DsplyStatus mSync.Progress(enSyncObjectKindName, enSyncStepSyncing, enSyncActionChanged, 0)
  clsServices.EstablishExecTraceFile ................. mCompMan.UpdateOutdatedCommonComponents ..........:    250 Services.EstablishExecTraceFile u_wbk_serviced
  clsServices.ExpFilesDiffDisplay .................... mCommComps.InconsitencyWarning ...................:    305 Services.ExpFilesDiffDisplay fd_exp_file_left_full_name:=exp_file_full_name, fd_exp_file_left_title:="Raw Common Component's Export File
  clsServices.ExportChangedComponents ................ mCompMan.ExportChangedComponents .................:    300 Services.ExportChangedComponents e_hosted
  clsServices.FilesDiffer ............................ clsComp.ExpFilesDiffer ...........................:    325 ExpFilesDiffer = mCompMan.Services.FilesDiffer(fd_exp_file_1:=Raw.SavedExpFile, fd_exp_file_2:=Me.ExpFile)
  clsServices.FilesDifference ........................ clsComp.Changed ..................................:    116 Set dctChanges = mCompMan.Services.FilesDifference(fd_exp_file_1:=fso.GetFile(Me.ExpFileTempFullName), fd_exp_file_2:=fso.GetFile(Me.ExpFileFullName))
  clsServices.Initiate ............................... mSyncTest.TestSync ...............................:    180 .Initiate mCompManClient.SRVC_SYNCHRONIZE, wsSyncTest.wbkTarget, False
  clsServices.IsRenamedByCompMan ..................... mExport.All ......................................:     54 If Not Services.IsRenamedByCompMan(vbc.Name) Then
  clsServices.LogEntry ............................... mSyncShapePrprtys.SyncAssertion ..................:    966 Services.LogEntry "Property " & mBasic.Align(PropertyName(sa_en_property), lPropertyMaxLen, AlignLeft, , ".") & "
  clsServices.MessageUnload .......................... mSyncNames.AppRunChanged .........................:    278 Services.MessageUnload TITLE_SYNC_NAMES
  clsServices.NoOfItemsServicedNames ................. mExport.ChangedComponents ........................:    160 .NoOfItemsServicedNames = vbc.Name
  clsServices.ProgressOld ............................ mExport.All ......................................:     65 Services.ProgressOld p_result:=lExported, p_of:=lAll, p_op:="exported", p_dots:=String(lRemaining, ".")
  clsServices.RemoveTempRenamed ...................... mExport.All ......................................:     73 Services.RemoveTempRenamed
  clsStats.Count ..................................... wsConfig.CurrentStatus ...........................:    332 For i = 1 To cll.Count
  mAddin.AutoOpenShortCut ............................ wsConfig.AutoOpenAddinIsSetup ....................:    149 AutoOpenAddinIsSetup = .FileExists(mAddin.AutoOpenShortCut)
  mAddin.Exists ...................................... mMe.Renew_08_SaveDevInstncWorkbookAsAddin ........:    560 If Not mAddin.Exists Then
  mAddin.GiveUp ...................................... wsConfig.CompManAddinProvideGiveUpFlipFlop .......:    206 mAddin.GiveUp
  mAddin.IsOpen ...................................... wbCompMan.Workbook_BeforeClose ...................:     28 If mAddin.IsOpen Then
  mAddin.Paused ...................................... wbCompMan.Workbook_BeforeClose ...................:     29 mAddin.Paused = False
  mAddin.PausedFlipFlop .............................. wbCompMan.ErrSrc .................................:     14 Private Function ErrSrc(ByVal sProc As String) As String
  mAddin.ReferencesRemove ............................ mMe.Renew_03_SaveAndRemoveAddInReferences ........:    428 mAddin.ReferencesRemove dctAddInRefs, sWbs, bOneRemoved, bAllRemoved
  mAddin.Set_IsAddin_ToFalse ......................... mMe.Renew_05_Set_IsAddin_ToFalse .................:    470 If mAddin.Set_IsAddin_ToFalse Then
  mAddin.SetupRenew .................................. wbCompMan.ErrSrc .................................:     14 Private Function ErrSrc(ByVal sProc As String) As String
  mAddin.WbkClose .................................... mMe.Renew_06_CloseCompManAddinWorkbook ...........:    496 Renew_06_CloseCompManAddinWorkbook = mAddin.WbkClose(sErrDesc)
  mAddin.WbkFullName ................................. wsConfig.AutoOpenAddinSetup ......................:    178 .TargetPath = mAddin.WbkFullName
  mAddin.WbkName ..................................... mCompManTest.Test_UpdateOutdatedCommonComponents .:    167 AddinService = mAddin.WbkName & "!mCompMan.UpdateOutdatedCommonComponents"
  mAddin.WbkRemove ................................... mMe.Renew_07_DeleteAddInInstanceWorkbook .........:    526 mAddin.WbkRemove WbkFullName
  mCommComps.CommCompRegStateEnum .................... mCompManDat.CompRegState .........................:    143 CompRegState = mCommComps.CommCompRegStateEnum(Value(pp_section:=comp_name, pp_value_name:=VALUE_NAME_REG_STAT_OF_COMPONENT))
  mCommComps.CommCompRegStateString .................. mCompManDat.ComponentsRegistered .................:    130 If mFso.PPvalue(pp_file:=CompManDatFileFullName, pp_section:=vSection, pp_value_name:=VALUE_NAME_REG_STAT_OF_COMPONENT) = CommCompRegStateString(c_reg_state) Then
  mCommComps.CommCompsDatFileFullName ................ mHskpng.CommComps ................................:     21 ReorgDatFile CommCompsDatFileFullName
  mCommComps.Components .............................. mExport.ChangedComponents ........................:    146 .LogEntry "Exported, Revision Number increased, Export File copied to 'Common Components Folder'"
  mCommComps.ExistsAsGlobalCommonComponentExportFile . mHskpng.CommCompsUsed ............................:    191 If mCommComps.ExistsAsGlobalCommonComponentExportFile(vbc) Then
  mCommComps.ExistsRegistered ........................ clsComp.KindOfComp ...............................:    422 If mCommComps.ExistsRegistered(sCompName) Then
  mCommComps.Hosted .................................. mExport.ChangedComponents ........................:    139 Services.LogEntry "Hosted Raw Common Component code modified"
  mCommComps.InconsitencyWarning ..................... mHskpng.CommCompsHosted ..........................:    289 If InconsitencyWarning (exp_file_full_name:=.ExpFile.Path, saved_exp_file_full_name:=mCommComps.SavedExpFile(v).Path, sri_diff_message:="While the Revision Number of the 'Hosted Raw'  " & mBasic.Spaced(v) & "  is identical with the " & "'Saved Raw' their Export Files are different. Compared were:" & vbLf & "Hosted Raw Export File = " & .ExpFile.Path & vbLf & "Saved Raw Export File  = " & mCommComps.SavedExpFile(v).Path & vbLf & "whereby any empty code lines and case differences had been ignored. " & "The difference thus really matters!" ) Then
  mCommComps.OutdatedUpdate .......................... mCompMan.UpdateOutdatedCommonComponents ..........:    258 mCommComps.OutdatedUpdate
  mCommComps.Qoutdated ............................... mCompMan.UpdateOutdatedCommonComponents ..........:    257 Set mCommComps.Qoutdated = Nothing
  mCommComps.RawExpFileFullName ...................... mHskpng.CommCompsAddMissingComponents ............:     63 mCommComps.RawExpFileFullName(sCompName) = vbNullString
  mCommComps.RawHostWbBaseName ....................... clsRaw.RawHostWbBaseName .........................:     67 RawHostWbBaseName = mCommComps.RawHostWbBaseName(sCompName)
  mCommComps.RawHostWbFullName ....................... clsRaw.ExpFileTempFullName .......................:     47 sTempFolder = mExport.ExpFileFolderPath(RawHostWbFullName) & "\Temp"
  mCommComps.RawHostWbName ........................... clsRaw.RawHostWbName .............................:     81 RawHostWbName = mCommComps.RawHostWbName(sCompName)
  mCommComps.Register ................................ mHskpng.CommCompsHosted ..........................:    277 mCommComps.Register v, .ExpFileFullName
  mCommComps.RevisionNumber .......................... clsRaw.RevisionNumber ............................:     83 RevisionNumber = mCommComps.RevisionNumber(sCompName)
  mCommComps.SaveToCommonComponentsFolder ............ mExport.ChangedComponents ........................:    142 mCommComps.SaveToCommonComponentsFolder .CompName, .ExpFile, .ExpFileFullName
  mCommComps.SavedExpFile ............................ mHskpng.CommCompsHosted ..........................:    283 If Services.FilesDiffer(fd_exp_file_1:=.ExpFile, fd_exp_file_2:=mCommComps.SavedExpFile(v)) Then
  mCommComps.SavedExpFileExists ...................... mExport.ChangedComponents ........................:    148 ElseIf Not mCommComps.SavedExpFileExists(.CompName) Then
  mCommComps.SavedExpFileFullName .................... clsRaw.SavedExpFile ..............................:     90 Set SavedExpFile = fso.GetFile(mCommComps.SavedExpFileFullName(sCompName))
  mComp.Exists ....................................... mExport.Hskpng ...................................:    248 If Not mComp.Exists(.GetBaseName(fl), Services.Serviced) Then
  mComp.IsSheetDocMod ................................ mSyncComps.Collect ...............................:    408 If mComp.IsSheetDocMod(vbcSource, c_wbk_source, wshSource) Then
  mComp.RENAMED_BY_COMPMAN ........................... clsServices.IsRenamedByCompMan ...................:    781 IsRenamedByCompMan = InStr(comp_name, RENAMED_BY_COMPMAN) <> 0
  mComp.TempName ..................................... mUpdate.ByReImport ...............................:    113 sTempName = mComp.TempName(tn_wbk:=b_wbk_target, tn_vbc_name:=b_vbc_name)
  mComp.TypeString ................................... mSyncComps.SyncId ................................:    727 SyncId = s_vbc.Name & " (" & mComp.TypeString(s_vbc, s_wbk) & ")"
  mCompMan.ExportChangedComponents ................... mCompManTest.Test_ExportChanged ..................:     88 mCompMan.ExportChangedComponents ThisWorkbook, "mCompManClient"
  mCompMan.Log ....................................... clsServices.Class_Terminate ......................:     55 Set Log = Nothing
  mCompMan.README_CONFIG_CHANGES ..................... wsConfig.FolderCompManRootIsValid ................:    380 FolderCompManRootUrl = mCompMan.README_CONFIG_CHANGES
  mCompMan.README_DEFAULT_FILES_AND_FOLDERS .......... wsConfig.FolderCompManRootIsValid ................:    382 CommonComponentsFolderUrl = mCompMan.README_DEFAULT_FILES_AND_FOLDERS
  mCompMan.README_SYNC_CHAPTER ....................... mSyncShapes.SyncKind .............................:   1126 .OpenWhenClicked = mCompMan.README_URL & mCompMan.README_SYNC_CHAPTER
  mCompMan.README_SYNC_CHAPTER_NAMES ................. mSyncNames.RefToChangeConfirmed ..................:   1398 .OpenWhenClicked = mCompMan.README_URL & mCompMan.README_SYNC_CHAPTER_NAMES
  mCompMan.README_URL ................................ wsConfig.UrlButton ...............................:    136 mWsh.Url(Me, url_rng, xlUnderlineStyleNone, 11) = Replace(Replace(mCompMan.README_URL & url_chapter, "##", "#"), "?", vbNullString)
  mCompMan.SynchronizeVBProjects ..................... mSyncTest.TestSync ...............................:    206 mCompMan.SynchronizeVBProjects wsSyncTest.wbkTarget
  mCompMan.UpdateOutdatedCommonComponents ............ mCompManTest.Test_UpdateOutdatedCommonComponents .:    167 AddinService = mAddin.WbkName & "!mCompMan.UpdateOutdatedCommonComponents"
  mCompMan.WbkGetOpen ................................ clsComp.Wrkbk ....................................:    558 Set wbk = mCompMan.WbkGetOpen(sWrkbkFullName)
  mCompMan.WinMergeIsInstalled ....................... mMe.AssertedWinMerge .............................:    176 AssertedWinMerge = mCompMan.WinMergeIsInstalled
  mCompManDat.CommCompUsedIsKnown .................... mExport.ChangedComponents ........................:    167 If mCompManDat.CommCompUsedIsKnown(vbc.Name) Then
  mCompManDat.DueModificationWarning ................. clsComp.DueModificationWarning ...................:     85 DueModificationWarning = mCompManDat.DueModificationWarning(sCompName)
  mCompManDat.Hskpng ................................. mCompMan.UpdateOutdatedCommonComponents ..........:    256 mCompManDat.Hskpng u_hosted
  mCompManDat.RawExpFileFullName ..................... mHskpng.CommCompsHosted ..........................:    272 mCompManDat.RawExpFileFullName(v) = .ExpFileFullName
  mCompManDat.RawRevisionNumber ...................... mCommComps.SaveToCommonComponentsFolder ..........:    675 mCommComps.RevisionNumber(stgf_comp_name) = mCompManDat.RawRevisionNumber(stgf_comp_name)
  mCompManDat.RawRevisionNumberIncrease .............. mExport.ChangedComponents ........................:    141 mCompManDat.RawRevisionNumberIncrease v
  mCompManDat.RecentlyUsedExportFolder ............... mExport.Hskpng ...................................:    232 sExpFldrRecentName = mCompManDat.RecentlyUsedExportFolder
  mCompManDat.RegistrationState ...................... mExport.ChangedComponents ........................:    143 mCompManDat.RegistrationState(.CompName) = enRegStateHosted
  mCompManDat.RemoveComponent ........................ mHskpng.CommCompsRemoveObsoleteComponents ........:    115 mCompManDat.RemoveComponent v
  mCompManDat.RevisionNumber ......................... clsComp.RevisionNumbersDiffer ....................:    353 RevisionNumbersDiffer = mCommComps.RevisionNumber(sCompName) <> mCompManDat.RevisionNumber(sCompName)
  mCompManDat.RevisionNumberInitial .................. mHskpng.CommCompsAddMissingComponents ............:     67 mCommComps.RevisionNumber(sCompName) = mCompManDat.RevisionNumberInitial
  mConfig.Adjust ..................................... mMe.AssertedFilesAndFldrsStructure ...............:    125 If mConfig.ServicedRootFolderNameCurrent <> wsConfig.FolderCompManRoot Then mConfig.Adjust
  mConfig.CompManParentFolderNameDefault ............. mMe.AssertedFilesAndFldrsStructure ...............:    116 ThisWorkbook.SaveAs mConfig.CompManParentFolderNameDefault & "\" & ThisWorkbook.Name
  mConfig.DefaultEnvDisplay .......................... mMe.AssertedFilesAndFldrsStructure ...............:    111 If DefaultEnvDisplay(BttnGoAhead) = BttnGoAhead Then
  mConfig.DefaultEnvSetup ............................ mMe.AssertedFilesAndFldrsStructure ...............:    112 mConfig.DefaultEnvSetup
  mConfig.EnvIsMissing ............................... mMe.AssertedFilesAndFldrsStructure ...............:    105 If mConfig.EnvIsMissing() Then
  mConfig.ServicedRootFolderNameCurrent .............. mMe.AssertedFilesAndFldrsStructure ...............:    125 If mConfig.ServicedRootFolderNameCurrent <> wsConfig.FolderCompManRoot Then mConfig.Adjust
  mConfig.SetupConfirmed ............................. mMe.AssertedFilesAndFldrsStructure ...............:    121 mConfig.SetupConfirmed
  mConfig.VBCompManAddinFolderNameCurrent ............ mAddin.WbkFullName ...............................:     27 WbkFullName = mConfig.VBCompManAddinFolderNameCurrent & DBSLASH & WbkName
  mExport.ChangedComponents .......................... clsServices.ExportChangedComponents ..............:    557 mExport.ChangedComponents e_hosted
  mExport.ExpFileFolderPath .......................... clsRaw.ExpFileTempFullName .......................:     47 sTempFolder = mExport.ExpFileFolderPath(RawHostWbFullName) & "\Temp"
  mExport.dctAllComps ................................ clsServices.Initiate .............................:    736 Set dctAllComps = Comps.CollectAll()
  mHskpng.CommComps .................................. mCompMan.UpdateOutdatedCommonComponents ..........:    255 mHskpng.CommComps u_hosted
  mHskpng.ReorgDatFile ............................... mCompManDat.RegistrationState ....................:     42 mHskpng.ReorgDatFile CompManDatFileFullName
  mMe.AssertedServicingEnabled ....................... wbCompMan.Workbook_BeforeSave ....................:     38 If mMe.AssertedServicingEnabled Then
  mMe.AutoOpenShortCutCompManWbk ..................... wsConfig.AutoOpenCompManIsSetup ..................:    257 AutoOpenCompManIsSetup = .FileExists(AutoOpenShortCutCompManWbk)
  mMe.BaseName ....................................... clsComp.WrkbkBaseName ............................:    596 WrkbkBaseName = BaseName(sWrkbkFullName)
  mMe.DevInstncFullName .............................. mCompManTest.Test_UpdateOutdatedCommonComponents .:    188 MsgBox Title:="Test " & PROC & " not executed!", Prompt:="Executions of this test must not be performed 'within' the 'CompMan Add-in' Workbook." & vbLf & vbLf & "The test requires the 'CompMan Add-in' (" & mAddin.WbkName & ") is open " & AddInStatus & " but must be performed " & "from within the development instance (" & mMe.DevInstncFullName & ").", Buttons:=vbExclamation
  mMe.IsAddinInstnc .................................. wsConfig.AutoOpenAddinSetup ......................:    172 If mMe.IsAddinInstnc Then GoTo xt
  mMe.IsDevInstnc .................................... wbCompMan.Workbook_BeforeClose ...................:     27 If mMe.IsDevInstnc Then
  mMe.RenewAction .................................... wsConfig.MonitorRenewStep ........................:    573 If sRenewResult <> vbNullString Then sProgressMsg = ProgressMsg(RenewStep, RenewAction, sRenewResult)
  mMe.RenewStep ...................................... wsConfig.MonitorRenewStep ........................:    573 If sRenewResult <> vbNullString Then sProgressMsg = ProgressMsg(RenewStep, RenewAction, sRenewResult)
  mMe.RenewTerminatedByUser .......................... wsConfig.MonitorRenewStep ........................:    590 If mMe.RenewTerminatedByUser Then
  mMe.Renew___AddIn .................................. mAddin.SetupRenew ................................:    167 mMe.Renew___AddIn
  mSync.AppRunInit ................................... mSyncNames.AppRunChanged .........................:    243 AppRunInit
  mSync.AppRunNewIds ................................. mSyncNames.AppRunNew .............................:    409 va = Split(AppRunNewIds(enSyncObjectKindName), ",")
  mSync.AppRunObsoleteIds ............................ mSyncNames.AppRunObsolete ........................:    475 va = Split(mSync.AppRunObsoleteIds(enSyncObjectKindName), ",")
  mSync.AppRunTerminate .............................. mSyncNames.AppRunChanged .........................:    274 AppRunTerminate
  mSync.CollectKnown ................................. mSyncNames.CollectKnown ..........................:    824 Private Sub CollectKnown(ByRef c_dct As Dictionary, ByVal c_id As String, Optional ByVal c_v As Variant = Nothing)
  mSync.DueSyncIdsByAction ........................... mSyncNames.AppRunChangedIdsSource ................:    290 AppRunChangedIdsSource = mSync.DueSyncIdsByAction(enSyncObjectKindName, enSyncActionChanged, "to")
  mSync.DueSyncKindOfObject .......................... mSyncShapes.AllDone ..............................:    626 AllDone = Not DueSyncKindOfObject(enSyncObjectKindShape)
  mSync.DueSyncKindOfObjects ......................... mSyncNames.AllDone ...............................:    137 mSync.DueSyncKindOfObjects.DeQueue , enSyncObjectKindName
  mSync.DueSyncLet ................................... mSyncShapePrprtys.CollectChanged .................:    349 mSync.DueSyncLet , PropertyName(enProperty), enSyncActionChangeShapePrprty, , sId
  mSync.DueSyncs ..................................... mSyncNames.SyncKind ..............................:   1630 sDueSyncs = DueSyncs(enSyncObjectKindName)
  mSync.InitDueSyncs ................................. mSyncNames.Collect ...............................:    574 If lSyncMode = SyncByKind Then mSync.InitDueSyncs
  mSync.Initiate ..................................... mSyncTest.TestSync ...............................:    189 mSync.Initiate i_sync_refs:=True, i_sync_sheets:=True, i_sync_names:=True, i_sync_shapes:=False, i_sync_comps:=True
  mSync.MonitorStep .................................. mSyncNames.SyncKind ..............................:   1626 mSync.MonitorStep "Synchronizing Names"
  mSync.OpenDecision ................................. mCompMan.SynchronizeVBProjects ...................:    400 mSync.OpenDecision
  mSync.Progress ..................................... mSyncNames.AppRunChanged .........................:    242 Services.DsplyStatus mSync.Progress(enSyncObjectKindName, enSyncStepSyncing, enSyncActionChanged, 0)
  mSync.RunSync ...................................... mSyncTest.TestSync ...............................:    209 mSync.RunSync
  mSync.SYNC_ACTION_ADD_NEW .......................... mSyncNames.SyncKind ..............................:   1660 .Text = SYNC_ACTION_ADD_NEW & ":"
  mSync.SYNC_ACTION_CHANGE_CODE ...................... mSyncComps.SyncKind ..............................:    792 .Text = SYNC_ACTION_CHANGE_CODE & ":"
  mSync.SYNC_ACTION_CHANGE_CODENAME .................. mSyncSheets.SyncKind .............................:    956 .Text = SYNC_ACTION_CHANGE_NAME & ", " & SYNC_ACTION_CHANGE_CODENAME & ":"
  mSync.SYNC_ACTION_CHANGE_NAME ...................... mSyncNames.SyncKind ..............................:   1671 .Text = SYNC_ACTION_CHANGE_NAME & ", " & SYNC_ACTION_CHANGE_SCOPE & ":"
  mSync.SYNC_ACTION_CHANGE_SCOPE ..................... mSyncNames.SyncKind ..............................:   1671 .Text = SYNC_ACTION_CHANGE_NAME & ", " & SYNC_ACTION_CHANGE_SCOPE & ":"
  mSync.SYNC_ACTION_MULTIPLE_SOURCE .................. mSyncNames.SyncKind ..............................:   1682 .Text = SYNC_ACTION_MULTIPLE_SOURCE & ", " & SYNC_ACTION_MULTIPLE_TARGET & ":"
  mSync.SYNC_ACTION_MULTIPLE_TARGET .................. mSyncNames.SyncKind ..............................:   1682 .Text = SYNC_ACTION_MULTIPLE_SOURCE & ", " & SYNC_ACTION_MULTIPLE_TARGET & ":"
  mSync.SYNC_ACTION_OWNED_BY_PROJECT ................. mSyncSheets.SyncKind .............................:    967 .Text = SYNC_ACTION_OWNED_BY_PROJECT & ":"
  mSync.SYNC_ACTION_REMOVE_OBSOLETE .................. mSyncNames.SyncKind ..............................:   1649 .Text = SYNC_ACTION_REMOVE_OBSOLETE & ":"
  mSync.SYNC_ALL_BTTN ................................ mSyncShapes.SyncKind .............................:   1130 Set cllButtons = mMsg.Buttons(cllButtons, SYNC_ALL_BTTN)
  mSync.SYNC_ID_SEPARATOR ............................ mSyncNames.DueNameSync ...........................:   1140 sName = Split(sId, SYNC_ID_SEPARATOR)(0)
  mSync.SYNC_TARGET_SUFFIX ........................... wsSyncTest.SetupTestWorkbooksEstablish ...........:    527 sTrgtCpyFullName = Replace(sTargetFullName, sExt, SYNC_TARGET_SUFFIX & sExt)
  mSync.SourceExists ................................. mCompMan.SynchronizeVBProjects ...................:    394 If mSync.SourceExists(sync_wbk_opened) Then
  mSync.SyncActionIsChange ........................... mSyncNames.Collected .............................:    776 Case mSync.SyncActionIsChange(c_action)
  mSync.SyncActionIsMultiple ......................... mSyncNames.Collected .............................:    779 Case mSync.SyncActionIsMultiple(c_action)
  mSync.SyncActionString ............................. mSyncNames.SyncKind ..............................:   1637 bDueNew = InStr(sDueSyncs, SyncActionString(enSyncActionAddNew)) <> 0
  mSync.SyncMode ..................................... mSyncTest.TestSync ...............................:    208 mSync.SyncMode
  mSync.Target ....................................... wsConfig.Worksheet_Change ........................:    685 Private Sub Worksheet_Change(ByVal Target As Range)
  mSync.TargetWorkingCopy ............................ mSyncTest.Test_EnvironmentCleanup ................:    112 mSync.TargetWorkingCopy.Close False
  mSync.TargetWorkingCopyFullName .................... mSyncTest.Test_EnvironmentCleanup ................:    103 sTargetWorkingCopy = mSync.TargetWorkingCopyFullName(TestSyncTargetFullName)
  mSync.cllAction .................................... mSyncNames.DueNameSync ...........................:   1136 sAction = cllAction(d_index)
  mSync.cllComment ................................... mSyncNames.DueNameSync ...........................:   1139 sComment = cllComment(d_index)
  mSync.cllDirection ................................. mSyncNames.DueNameSync ...........................:   1137 sDirection = cllDirection(d_index)
  mSync.cllId ........................................ mSyncNames.DueNameSync ...........................:   1138 sId = cllId(d_index)
  mSync.cllKind ...................................... mSyncNames.DueNameSync ...........................:   1135 sKind = cllKind(d_index)
  mSync.lSyncMode .................................... mSyncNames.AppRunChanged .........................:    277 If lSyncMode <> SyncSummarized Then
  mSync.source ....................................... wsConfig.FolderExportIsValid .....................:    450 FolderExport = "source"
  mSyncComps.AllDone ................................. mSync.AllDueSyncsDone ............................:    218 If Not mSyncComps.AllDone(a_wbk_source, a_wbk_target) Then GoTo xt
  mSyncComps.AppRunSyncAll ........................... mSync.AppRunSyncAll ..............................:    276 mSyncComps.AppRunSyncAll
  mSyncComps.Collect ................................. mSync.CollectAll .................................:    311 If DueSyncKindOfObjects.IsQueued(enSyncObjectKindVBComponent) Then mSyncComps.Collect c_wbk_source, c_wbk_target
  mSyncComps.Initialize .............................. mSync.Initiate ...................................:    782 mSyncComps.Initialize
  mSyncComps.KnownChanged ............................ mSync.DueSyncLet .................................:    526 mSyncComps.KnownChanged(d_id) = True
  mSyncComps.KnownNew ................................ mSync.DueSyncLet .................................:    525 mSyncComps.KnownNew(d_id) = True
  mSyncComps.KnownObsolete ........................... mSync.DueSyncLet .................................:    524 mSyncComps.KnownObsolete(d_id) = True
  mSyncComps.SyncKind ................................ mSync.SyncKind ...................................:   1554 mSyncComps.SyncKind s_wbk_source, s_wbk_target
  mSyncNames.AllDone ................................. mSync.AllDueSyncsDone ............................:    212 If Not mSyncNames.AllDone(a_wbk_source, a_wbk_target) Then GoTo xt
  mSyncNames.AllNames ................................ mSyncSheets.AppRunNew ............................:    248 mSyncNames.AllNames wbkTarget, dctNames
  mSyncNames.AppRunSyncAll ........................... mSync.AppRunSyncAll ..............................:    267 mSyncNames.AppRunSyncAll
  mSyncNames.Collect ................................. mSync.CollectAll .................................:    309 If DueSyncKindOfObjects.IsQueued(enSyncObjectKindName) Then mSyncNames.Collect c_wbk_source, c_wbk_target, c_terminated
  mSyncNames.Initialize .............................. mSync.Initiate ...................................:    770 mSyncNames.Initialize
  mSyncNames.KnownChanged ............................ mSync.DueSyncLet .................................:    497 mSyncNames.KnownChanged(d_id, SyncKindString(d_kind)) = True
  mSyncNames.KnownNew ................................ mSync.DueSyncLet .................................:    492 mSyncNames.KnownNew(d_id, SyncKindString(d_kind)) = True
  mSyncNames.KnownObsolete ........................... mSync.DueSyncLet .................................:    493 mSyncNames.KnownObsolete(d_id, SyncKindString(d_kind)) = True
  mSyncNames.RemoveAllOfSheet ........................ mSyncSheets.Delete ...............................:    696 mSyncNames.RemoveAllOfSheet d_wsh
  mSyncNames.RemoveDuplicatesCreatedBySheetClone ..... mSyncSheets.AppRunNew ............................:    259 RemoveDuplicatesCreatedBySheetClone r_in_dct:=dctNames, r_wbk_source:=wbkSource, r_wbk_target:=wbkTarget
  mSyncNames.SyncKind ................................ mSync.SyncKind ...................................:   1551 mSyncNames.SyncKind s_wbk_source, s_wbk_target
  mSyncRefs.AllDone .................................. mSync.AllDueSyncsDone ............................:    206 If Not mSyncRefs.AllDone(a_wbk_source, a_wbk_target) Then GoTo xt
  mSyncRefs.AppRunSyncAll ............................ mSync.AppRunSyncAll ..............................:    264 mSyncRefs.AppRunSyncAll
  mSyncRefs.Collect .................................. mSync.CollectAll .................................:    307 If DueSyncKindOfObjects.IsQueued(enSyncObjectKindReference) Then mSyncRefs.Collect c_wbk_source, c_wbk_target
  mSyncRefs.KnownNew ................................. mSync.DueSyncLet .................................:    501 mSyncRefs.KnownNew(d_id) = True
  mSyncRefs.KnownObsolete ............................ mSync.DueSyncLet .................................:    502 mSyncRefs.KnownObsolete(d_id) = True
  mSyncRefs.SyncKind ................................. mSync.SyncKind ...................................:   1550 mSyncRefs.SyncKind s_wbk_source, s_wbk_target
  mSyncShapePrprtys.CollectChanged ................... mSyncNames.Collect ...............................:    596 CollectChanged nmeSource, nmeTarget, bNameDiffers, bScopeDiffers
  mSyncShapePrprtys.ShapeSource ...................... mSyncShapes.AppRunChanged ........................:    224 mSyncShapePrprtys.ShapeSource = shpSource
  mSyncShapePrprtys.ShapeTarget ...................... mSyncShapes.AppRunChanged ........................:    225 mSyncShapePrprtys.ShapeTarget = shpTarget
  mSyncShapePrprtys.SyncProperties ................... mSyncNames.SyncProperties ........................:   1725 Private Sub SyncProperties(ByVal p_nme_source As Name, ByVal p_nme_target As Name)
  mSyncShapes.AllDone ................................ mSync.AllDueSyncsDone ............................:    215 If Not mSyncShapes.AllDone(a_wbk_source, a_wbk_target) Then GoTo xt
  mSyncShapes.AppRunSyncAll .......................... mSync.AppRunSyncAll ..............................:    273 mSyncShapes.AppRunSyncAll
  mSyncShapes.Collect ................................ mSync.CollectAll .................................:    310 If DueSyncKindOfObjects.IsQueued(enSyncObjectKindShape) Then mSyncShapes.Collect c_wbk_source, c_wbk_target
  mSyncShapes.Collected .............................. mSyncNames.Collected .............................:    774 Private Function Collected(ByVal c_action As enSyncAction) As Long
  mSyncShapes.CorrespondingOOB ....................... mSyncShapePrprtys.CollectChanged .................:    338 If Not mSyncShapes.CorrespondingOOB(shpSource, wshTarget, oobTarget) Is Nothing Then
  mSyncShapes.CorrespondingShape ..................... mSyncShapePrprtys.CollectChanged .................:    357 If Not mSyncShapes.CorrespondingShape(shpSource, wshTarget, shpTarget) Is Nothing Then
  mSyncShapes.Exists ................................. mSyncTest.Test_ProvideControls ...................:    236 If Not mSyncShapes.Exists(sName, wsh) Then
  mSyncShapes.Initialize ............................. mSync.Initiate ...................................:    776 mSyncShapes.Initialize
  mSyncShapes.KnownChanged ........................... mSync.DueSyncLet .................................:    520 mSyncShapes.KnownChanged(d_id) = True
  mSyncShapes.KnownNew ............................... mSync.DueSyncLet .................................:    517 mSyncShapes.KnownNew(d_id) = True
  mSyncShapes.KnownObsolete .......................... mSync.DueSyncLet .................................:    516 mSyncShapes.KnownObsolete(d_id) = True
  mSyncShapes.NoOfShapes ............................. mSync.ProgressOf .................................:   1195 lOfSource = mSyncShapes.NoOfShapes(mSync.source)
  mSyncShapes.ShapeNames ............................. mSyncShapePrprtys.CollectChanged .................:    353 Err.Raise AppErr(1), ErrSrc(PROC), "No corresponding target OOB found for the source Shape " & mSyncShapes.ShapeNames(shpSource)
  mSyncShapes.SyncId ................................. mSyncShapePrprtys.SyncId .........................:   1045 SyncId = mSyncShapes.SyncId(s_shp) & "." & PropertyName(s_en_property)
  mSyncShapes.SyncKind ............................... mSync.SyncKind ...................................:   1553 mSyncShapes.SyncKind
  mSyncShapes.TypeString ............................. mSyncShapePrprtys.PropertyServiced ...............:    670 PropertyServiced = mSyncShapes.TypeString(spv_shp_source) & ";" & spv_wsh_target.Name & "." & ShapeNames(spv_shp_source)
  mSyncSheets.AllDone ................................ mSync.AllDueSyncsDone ............................:    209 If Not mSyncSheets.AllDone(a_wbk_source, a_wbk_target) Then GoTo xt
  mSyncSheets.AppRunSyncAll .......................... mSync.AppRunSyncAll ..............................:    270 mSyncSheets.AppRunSyncAll
  mSyncSheets.Collect ................................ mSync.CollectAll .................................:    308 If DueSyncKindOfObjects.IsQueued(enSyncObjectKindWorksheet) Then mSyncSheets.Collect c_wbk_source, c_wbk_target
  mSyncSheets.Corresponding .......................... mSyncNames.AppRunNew .............................:    422 mSyncSheets.Corresponding c_wsh:=wbkSource.Worksheets(sSheetName), c_wbk:=wbkTarget, c_quality:=enCorrespondingSheetsQuality.enOrNameCodeName, c_wsh_result:=wsh
  mSyncSheets.Initialize ............................. mSync.Initiate ...................................:    764 mSyncSheets.Initialize
  mSyncSheets.KnownChanged ........................... mSync.DueSyncLet .................................:    511 mSyncSheets.KnownChanged(d_id) = True
  mSyncSheets.KnownNew ............................... mSync.DueSyncLet .................................:    508 mSyncSheets.KnownNew(d_id) = True
  mSyncSheets.KnownObsolete .......................... mSync.DueSyncLet .................................:    507 mSyncSheets.KnownObsolete(d_id) = True
  mSyncSheets.KnownOwnedByPrjct ...................... mSync.DueSyncLet .................................:    512 mSyncSheets.KnownOwnedByPrjct(d_id) = True
  mSyncSheets.SyncKind ............................... mSync.SyncKind ...................................:   1552 mSyncSheets.SyncKind s_wbk_source, s_wbk_target
  mSyncTest.TestSync ................................. mCompManTest.Regression ..........................:     38 mSyncTest.TestSync cTest.Regression
  mUpdate.ByCodeReplace .............................. mSyncComps.AppRunChanged .........................:    194 mUpdate.ByCodeReplace b_source_vbc:=SourceComp.VBComp, b_source_wbk:=wbkSource, b_target_wbk:=wbkTarget
  mUpdate.ByReImport ................................. mSyncComps.AppRunChanged .........................:    199 mUpdate.ByReImport b_wbk_target:=wbkTarget, b_vbc_name:=SourceComp.VBComp.Name, b_exp_file:=SourceComp.ExpFileFullName
  mWinMergeIni.Setup ................................. mMe.AssertedFilesAndFldrsStructure ...............:    118 mWinMergeIni.Setup mWinMergeIni.WinMergeIniFullName
  mWinMergeIni.WinMergeIniAddinFullName .............. mMe.Renew_12_SetupWinMergeIni ....................:    651 mWinMergeIni.Setup WinMergeIniAddinFullName
  mWinMergeIni.WinMergeIniFullName ................... mMe.AssertedFilesAndFldrsStructure ...............:    118 mWinMergeIni.Setup mWinMergeIni.WinMergeIniFullName
  wsConfig.AutoOpenAddinIsSetup ...................... mConfig.Adjust ...................................:     58 If .AutoOpenAddinIsSetup Then .AutoOpenAddinSetup
  wsConfig.AutoOpenAddinRemove ....................... mConfig.DefaultEnvSetup ..........................:    217 .AutoOpenAddinRemove
  wsConfig.AutoOpenAddinSetup ........................ mMe.Renew_11_SetupAutoOpen .......................:    632 wsConfig.AutoOpenAddinSetup
  wsConfig.AutoOpenCompManFlipFlop ................... wbCompMan.ErrSrc .................................:     14 Private Function ErrSrc(ByVal sProc As String) As String
  wsConfig.AutoOpenCompManIsSetup .................... mConfig.Adjust ...................................:     59 If .AutoOpenCompManIsSetup Then .AutoOpenCompManSetup
  wsConfig.AutoOpenCompManRemove ..................... mConfig.DefaultEnvSetup ..........................:    216 .AutoOpenCompManRemove
  wsConfig.AutoOpenCompManSetup ...................... mConfig.Adjust ...................................:     59 If .AutoOpenCompManIsSetup Then .AutoOpenCompManSetup
  wsConfig.CompManAddinProvideGiveUpFlipFlop ......... wbCompMan.ErrSrc .................................:     14 Private Function ErrSrc(ByVal sProc As String) As String
  wsConfig.ConfigInfo ................................ mMe.Config .......................................:    306 wsConfig.ConfigInfo = "At least one essential configuration is still missing!"
  wsConfig.CurrentStatus ............................. mAddin.PausedFlipFlop ............................:    120 wsConfig.CurrentStatus
  wsConfig.FolderCommonComponentsPath ................ mCommComps.CommCompsDatFileFullName ..............:     26 CommCompsDatFileFullName = wsConfig.FolderCommonComponentsPath & "\CommComps.dat"
  wsConfig.FolderCompManRoot ......................... mCompMan.RunTest .................................:    344 Case Not rt_serviced_wbk.FullName Like wsConfig.FolderCompManRoot & "*"
  wsConfig.FolderCompManRootIsValid .................. mCompMan.RunTest .................................:    343 Case Not wsConfig.FolderCompManRootIsValid
  wsConfig.FolderExport .............................. mExport.Hskpng ...................................:    231 sExpFldrCurrentName = wsConfig.FolderExport
  wsConfig.FolderExportConfigure ..................... wbCompMan.ErrSrc .................................:     14 Private Function ErrSrc(ByVal sProc As String) As String
  wsConfig.FolderExportIsValid ....................... mMe.Config .......................................:    296 If cfg_addin Then Config = wsConfig.FolderCompManRootIsValid And wsConfig.FolderExportIsValid
  wsConfig.FolderSyncArchive ......................... mCompMan.RunTest .................................:    352 If wsConfig.FolderSyncTarget = vbNullString Or wsConfig.FolderSyncArchive = vbNullString Then
  wsConfig.FolderSyncArchiveConfigure ................ wbCompMan.ErrSrc .................................:     14 Private Function ErrSrc(ByVal sProc As String) As String
  wsConfig.FolderSyncTarget .......................... wsSyncTest.SetupTestWorkbooksEstablish ...........:    524 sTargetPath = wsConfig.FolderSyncTarget & "\" & SYNC_TEST_REGRESSION_FOLDER
  wsConfig.FolderSyncTargetConfigure ................. wbCompMan.ErrSrc .................................:     14 Private Function ErrSrc(ByVal sProc As String) As String
  wsConfig.FolderSyncTargetIsValid ................... mMe.Config .......................................:    299 If cfg_sync Then Config = wsConfig.FolderCompManRootIsValid And wsConfig.FolderExportIsValid And wsConfig.FolderSyncTargetIsValid
  wsConfig.MonitorRenewStep .......................... mMe.RenewMonitorResult ...........................:    257 wsConfig.MonitorRenewStep rn_result:=la_result, rn_last_step:=la_last
  wsConfig.Verified .................................. wbCompMan.Workbook_BeforeSave ....................:     40 If Not wsConfig.Verified Then
  wsService.ClearDataAllServices ..................... clsServices.Initiate .............................:    741 wsService.ClearDataAllServices
  wsService.ClearDataSynchService .................... clsServices.Initiate .............................:    756 wsService.ClearDataSynchService
  wsService.ClearDataUpdateService ................... clsServices.Initiate .............................:    761 wsService.ClearDataUpdateService
  wsService.CommonComponentsOutdated ................. mCommComps.OutdatedUpdateCollect .................:    616 If wsService.CommonComponentsOutdated = 0 Then wsService.CommonComponentsOutdated = Qoutdated.Size
  wsService.CommonComponentsUsed ..................... mCommComps.OutdatedUpdateCollect .................:    615 If wsService.CommonComponentsUsed = 0 Then wsService.CommonComponentsUsed = Services.NoOfItemsCommonUsed
  wsService.CurrentServiceLogFileFullName ............ clsServices.Initiate .............................:    749 wsService.CurrentServiceLogFileFullName = .FileFullName
  wsService.CurrentServiceName ....................... mSyncTest.TestSync ...............................:    166 wsService.CurrentServiceName = ErrSrc(PROC)
  wsService.CurrentServicedWorkbookFullName .......... wsSyncTest.SetupTestWorkbooksEstablish ...........:    559 wsService.CurrentServicedWorkbookFullName = SyncTestTarget.FullName
  wsService.MaxLenNameSyncId ......................... mSyncNames.AllDone ...............................:    139 If wsService.MaxLenNameSyncId = 0 Then mSyncNames.MaxLenNameId d_wbk_source, d_wbk_target
  wsService.MaxLenShapeSyncId ........................ mSyncShapes.AllDone ..............................:    631 If wsService.MaxLenShapeSyncId = 0 Then lMaxLen = mBasic.Max(lMaxLen, Len(SyncId(shp)))
  wsService.SyncComponents ........................... mSync.Initiate ...................................:    751 wsService.SyncComponents = DueSyncKindOfObjects.IsQueued(enSyncObjectKindVBComponent)
  wsService.SyncNames ................................ mSync.Initiate ...................................:    752 wsService.SyncNames = DueSyncKindOfObjects.IsQueued(enSyncObjectKindName)
  wsService.SyncReferences ........................... mSync.Initiate ...................................:    753 wsService.SyncReferences = DueSyncKindOfObjects.IsQueued(enSyncObjectKindReference)
  wsService.SyncShapes ............................... mSync.Initiate ...................................:    754 wsService.SyncShapes = DueSyncKindOfObjects.IsQueued(enSyncObjectKindShape)
  wsService.SyncSourceFullName ....................... wsSyncTest.SetupTestWorkbooksEstablish ...........:    557 wsService.SyncSourceFullName = SyncTestSource.FullName
  wsService.SyncTargetFullNameCopy ................... wsSyncTest.SetupTestWorkbooksEstablish ...........:    558 wsService.SyncTargetFullNameCopy = SyncTestTarget.FullName
  wsService.SyncWorksheets ........................... mSync.Initiate ...................................:    755 wsService.SyncWorksheets = DueSyncKindOfObjects.IsQueued(enSyncObjectKindWorksheet)
  wsSyncLog.Clear .................................... mAddin.Clear .....................................:     46 Private Sub Clear(ByVal c_addin_folder_full_name As String)
  wsSyncLog.Done ..................................... mSyncNames.AppRunChanged .........................:    267 If bName Then .Done "change", "Name", sIdTarget, "changed", "Name changed from " & sOldName & " to " & nmeTarget.Name
  wsSyncLog.RefsDone ................................. mSyncRefs.AppRunSyncAll ..........................:    252 wsSyncLog.RefsDone = True
  wsSyncLog.SummaryDone .............................. mSyncNames.AllDone ...............................:    136 wsSyncLog.SummaryDone("Name") = True
  wsSyncTest.DoSync .................................. mSyncTest.TestSync ...............................:    195 mSync.Initiate i_sync_refs:=wsSyncTest.DoSync("Reference"), i_sync_sheets:=wsSyncTest.DoSync("Worksheet"), i_sync_names:=wsSyncTest.DoSync("Name"), i_sync_shapes:=wsSyncTest.DoSync("Shape"), i_sync_comps:=wsSyncTest.DoSync("VBComponent")
  wsSyncTest.Setup ................................... mSyncTest.TestSync ...............................:    172 .Setup "source", t_regression
  wsSyncTest.SetupTestWorkbooksEstablish ............. mSyncTest.TestSync ...............................:    171 .SetupTestWorkbooksEstablish t_regression
  wsSyncTest.SyncTestSourceFullName .................. mSyncTest.TestSync ...............................:    184 mSync.source = mWbk.GetOpen(wsSyncTest.SyncTestSourceFullName)
  wsSyncTest.SyncTestTargetFullName .................. mSyncTest.TestSync ...............................:    185 mSync.TargetWorkingCopy = mWbk.GetOpen(wsSyncTest.SyncTestTargetFullName)
  wsSyncTest.wbkSource ............................... mSyncTest.TestSync ...............................:    173 .wbkSource.Save
  wsSyncTest.wbkTarget ............................... mSyncTest.TestSync ...............................:    180 .Initiate mCompManClient.SRVC_SYNCHRONIZE, wsSyncTest.wbkTarget, False
